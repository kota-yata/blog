{"data":{"markdownRemark":{"id":"573a7130-f058-5c6e-a4bf-5b6afd0e1d39","html":"<p>みなさんこんにちは。夏ですね。\n僕もついに部活動が再開し、ワクワクドキドキな訳ですが、一昨日の夜顧問からこんな連絡がきました。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- 毎朝5時20分までに検温を行い、結果をGoogleFormから報告してください\n- 報告がなかった部員は朝練の参加を認めません</code></pre></div>\n<p>そもそも朝練が6時半から始まる時点でイッているので5時20分に連絡しろと言われてもさほど驚かなかったのですが、ここで一つ問題が発生しました。</p>\n<p>というのも僕は普段朝5時に起き、そのままパンをかじりながら自転車で駅に向かうので、検温をする時間がないのです。もう少し早起きすれば済む話なのですが、4時起きは流石にきついし体がもたないのでやりたくない。かといって5時に起きて検温なんかしていたら朝練そのものに遅れてしまう。</p>\n<p>というわけで、朝5時くらいに、心配されない程度の体温をよしなに指定のFormに入力して送信してくれるプログラムを作りたいと思います。</p>\n<h2 id=\"seleniumでフォームを送信する\" style=\"position:relative;\"><a href=\"#selenium%E3%81%A7%E3%83%95%E3%82%A9%E3%83%BC%E3%83%A0%E3%82%92%E9%80%81%E4%BF%A1%E3%81%99%E3%82%8B\" aria-label=\"seleniumでフォームを送信する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Seleniumでフォームを送信する</h2>\n<p>本物のフォームを使ってやると僕の身元がバレてしまうので、今回は<a href=\"https://docs.google.com/forms/d/e/1FAIpQLScGgZ8dsBkcSVutvW3JgDLqy3pIEKk12ucjiA8mNQrKopILog/viewform\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">テスト用に僕が作成した本物と同じ内容のフォーム</a>で実装したいと思います。</p>\n<h3 id=\"初期値入力つきurlを用意する\" style=\"position:relative;\"><a href=\"#%E5%88%9D%E6%9C%9F%E5%80%A4%E5%85%A5%E5%8A%9B%E3%81%A4%E3%81%8Durl%E3%82%92%E7%94%A8%E6%84%8F%E3%81%99%E3%82%8B\" aria-label=\"初期値入力つきurlを用意する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>初期値入力つきURLを用意する</h3>\n<p>Google Formは、パラメータをつけることで各質問の値を入力した状態でURLを開くことができます。\n普通にフォームを開く際のURLは</p>\n<p><a href=\"https://docs.google.com/forms/d/e/1FAIpQLScGgZ8dsBkcSVutvW3JgDLqy3pIEKk12ucjiA8mNQrKopILog/viewform?usp=sf_link\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://docs.google.com/forms/d/e/1FAIpQLScGgZ8dsBkcSVutvW3JgDLqy3pIEKk12ucjiA8mNQrKopILog/viewform?usp=sf_link</a></p>\n<p>こんな感じでviewformの後に「usp=sf<em>link」というパラメータがついています。このパラメータは事前入力のない、ピュアな回答フォームであることを示しているので、まずここを「usp=pp</em>url」に変えて、事前入力があることを知らせてあげます。\n <br>\n<br>\nそしたら次に各質問の回答をパラメータに入力していきます。フォームの各質問を識別する番号があるので、Chromeの検証画面で質問のdivを探し、2階層目で以下のような番号を探します。\n<img src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/502570/d48564de-3d9c-07e0-7aec-755e1b4444d5.jpeg\" alt=\"スクリーンショット 2020-08-07 16.56.07.jpg\">\n番号を見つけたら<code class=\"language-text\">entry.番号=回答内容</code>の形でパラメータを加えます。今回は名前と体温をテキストで入力するので以下のようなURLになります。</p>\n<p><a href=\"https://docs.google.com/forms/d/e/1FAIpQLScGgZ8dsBkcSVutvW3JgDLqy3pIEKk12ucjiA8mNQrKopILog/viewform?usp=pp_url&#x26;entry.1534939278=%E8%8D%92%E5%B7%9D%E6%99%BA%E5%89%87&#x26;entry.511939456=36.5\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://docs.google.com/forms/d/e/1FAIpQLScGgZ8dsBkcSVutvW3JgDLqy3pIEKk12ucjiA8mNQrKopILog/viewform?usp=pp_url&#x26;entry.1534939278=荒川智則&#x26;entry.511939456=36.5</a>\nしかしこのままだと毎日36.5度を報告することになり、流石に怪しまれるので、乱数で良い感じに値を振ります。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 36.1~36.7の間でランダムに値を生成して文字列変換</span>\nbody_temp <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">36</span> <span class=\"token operator\">+</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># URLの最後に加える</span>\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'https://docs.google.com/forms/d/e/1FAIpQLScGgZ8dsBkcSVutvW3JgDLqy3pIEKk12ucjiA8mNQrKopILog/viewform?usp=pp_url&amp;entry.1534939278=荒川智則&amp;entry.511939456='</span><span class=\"token operator\">+</span>body_temp</code></pre></div>\n<h3 id=\"seleniumで自動提出\" style=\"position:relative;\"><a href=\"#selenium%E3%81%A7%E8%87%AA%E5%8B%95%E6%8F%90%E5%87%BA\" aria-label=\"seleniumで自動提出 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Seleniumで自動提出</h3>\n<p>URLが完成したら、あとはSeleniumでURLを開き、ポチッと提出ボタンを押してもらうだけです。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># SeleniumとChromedriverをpipでインストールしておく</span>\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n<span class=\"token keyword\">import</span> chromedriver_binary\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> random\n\nbody_temp <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">36</span> <span class=\"token operator\">+</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'https://docs.google.com/forms/d/e/1FAIpQLScGgZ8dsBkcSVutvW3JgDLqy3pIEKk12ucjiA8mNQrKopILog/viewform?usp=pp_url&amp;entry.1534939278=荒川智則&amp;entry.511939456='</span><span class=\"token operator\">+</span>body_temp\n\n<span class=\"token comment\"># クリックの関数</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">click</span><span class=\"token punctuation\">(</span>xpath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    driver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span>xpath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># パスワード入力の関数</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">insert_pw</span><span class=\"token punctuation\">(</span>xpath<span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    driver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span>xpath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>implicitly_wait<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n\nmoving_login_button <span class=\"token operator\">=</span> <span class=\"token string\">'/html/body/div[2]/div/div[2]/div[3]/div[2]'</span>\ntime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Googleアカウントでのログインが必要な場合はログインする</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">.</span>find_elements_by_xpath<span class=\"token punctuation\">(</span>moving_login_button<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  click<span class=\"token punctuation\">(</span>moving_login_button<span class=\"token punctuation\">)</span>\n  login_id <span class=\"token operator\">=</span> <span class=\"token string\">\"{Googleアカウントのメアド}\"</span>\n  login_id_xpath <span class=\"token operator\">=</span> <span class=\"token string\">'/html/body/div[1]/div[1]/div[2]/div/div[2]/div/div/div[2]/div/div[1]/div/form/span/section/div/div/div[1]/div/div[1]/div/div[1]/input'</span>\n  login_id_button <span class=\"token operator\">=</span> <span class=\"token string\">'/html/body/div[1]/div[1]/div[2]/div/div[2]/div/div/div[2]/div/div[2]/div/div[1]/div/div'</span>\n  insert_pw<span class=\"token punctuation\">(</span>login_id_xpath<span class=\"token punctuation\">,</span> login_id<span class=\"token punctuation\">)</span>\n  click<span class=\"token punctuation\">(</span>login_id_button<span class=\"token punctuation\">)</span>\n  time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  login_pw <span class=\"token operator\">=</span> <span class=\"token string\">\"{Googleアカウントのパスワード}\"</span>\n  login_pw_xpath <span class=\"token operator\">=</span> <span class=\"token string\">'/html/body/div[1]/div[1]/div[2]/div/div[2]/div/div/div[2]/div/div[1]/div/form/span/section/div/div/div[1]/div[1]/div/div/div/div/div[1]/div/div[1]/input'</span>\n  login_pw_button <span class=\"token operator\">=</span> <span class=\"token string\">'/html/body/div[1]/div[1]/div[2]/div/div[2]/div/div/div[2]/div/div[2]/div/div[1]/div/div'</span>\n  insert_pw<span class=\"token punctuation\">(</span>login_pw_xpath<span class=\"token punctuation\">,</span> login_pw<span class=\"token punctuation\">)</span>\n  time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  click<span class=\"token punctuation\">(</span>login_pw_button<span class=\"token punctuation\">)</span>\n\ntime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nsubmit_button <span class=\"token operator\">=</span> <span class=\"token string\">'//*[@id=\"mG61Hd\"]/div[2]/div/div[3]/div[1]/div/div'</span>\nclick<span class=\"token punctuation\">(</span>submit_button<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Done!\"</span><span class=\"token punctuation\">)</span>\n\ndriver<span class=\"token punctuation\">.</span>close\n<span class=\"token comment\"># メモリーを食うのでちゃんと終了しましょう</span>\ndriver<span class=\"token punctuation\">.</span>quit</code></pre></div>\n<img width=\"500\" alt=\"スクリーンショット 2020-08-07 17.23.49.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/502570/8f8adde5-f6fe-62f3-ad8f-76d6fb22f50d.png\">\n<p>しっかり送信できました。</p>\n<h2 id=\"定期イベントにする\" style=\"position:relative;\"><a href=\"#%E5%AE%9A%E6%9C%9F%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%81%AB%E3%81%99%E3%82%8B\" aria-label=\"定期イベントにする permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>定期イベントにする</h2>\n<p>コードが書けたらあとは定期イベント化するだけなのですが、ここで少しつまづいたのでやり方を説明しておきます。\n <br>\n<br>\n当初予定していた方法としてはAutomatorでアプリ化し、カレンダーに入れて毎日実行する方法(<a href=\"https://qiita.com/baraobara/items/73d753c678e5c0e72f46#4-mac%E3%81%AE%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88%E3%81%AEautomator%E3%82%92%E7%94%A8%E3%81%84%E3%81%A6mac%E5%86%85%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E3%82%8B\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">参考</a>)。これなら報告しなくて良い日はカレンダーから外せば良いし、完璧なはず。と思ったのですが、PCをシャットダウンしていると動作しないためボツ。crontabに設定して定期イベント化する方法も同様の理由でボツ。</p>\n<p>結局臨機応変にイベントの変更はできないものの、PCの状態にかかわらず実行してくれるAWSのLambdaを使用することに決めました。(Lambdaの使い方は<a href=\"https://www.wakuwakubank.com/posts/519-aws-lambda-introduction/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">このサイト</a>とかが参考になりました)</p>\n<h3 id=\"lambdaのレイヤーにseleniumとchromedriver、headless-chromiumを上げる\" style=\"position:relative;\"><a href=\"#lambda%E3%81%AE%E3%83%AC%E3%82%A4%E3%83%A4%E3%83%BC%E3%81%ABselenium%E3%81%A8chromedriver%E3%80%81headless-chromium%E3%82%92%E4%B8%8A%E3%81%92%E3%82%8B\" aria-label=\"lambdaのレイヤーにseleniumとchromedriver、headless chromiumを上げる permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LambdaのレイヤーにSeleniumとChromedriver、headless-chromiumを上げる</h3>\n<p>Lambdaでライブラリを使うには各フォルダをzipに圧縮してレイヤーにアップロードする必要があります。今回はSeleniumとChromeのWebdriverであるChromedriver、それからChromeを開かずにスクレイピングを行うためのheadless-chromiumを使用するので、それぞれzipに圧縮してレイヤーに上げていきます。</p>\n<h4 id=\"1-selenium\" style=\"position:relative;\"><a href=\"#1-selenium\" aria-label=\"1 selenium permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Selenium</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir selenium\ncd selenium\nmkdir python\ncd python\npip install selenium -t .\ncd ../\nzip -r selenium.zip ./python</code></pre></div>\n<p>できたzipファイルをそのままレイヤーにアップロードします。</p>\n<h4 id=\"2-chromedriverとheadless-chromium\" style=\"position:relative;\"><a href=\"#2-chromedriver%E3%81%A8headless-chromium\" aria-label=\"2 chromedriverとheadless chromium permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Chromedriverとheadless-chromium</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">curl https://github.com/adieuadieu/serverless-chrome/releases/download/v1.0.0-55/stable-headless-chromium-amazonlinux-2017-03.zip &gt; headless-chromium.zip\ncurl https://chromedriver.storage.googleapis.com/2.43/chromedriver_linux64.zip &gt; chromedriver.zip</code></pre></div>\n<p>できた二つのzipファイルを解凍し、headless-chromeフォルダにまとめます。その後そのheadless-chromeをzipに圧縮してレイヤーにアップロードします。</p>\n<h4 id=\"3-レイヤーを関数に適用\" style=\"position:relative;\"><a href=\"#3-%E3%83%AC%E3%82%A4%E3%83%A4%E3%83%BC%E3%82%92%E9%96%A2%E6%95%B0%E3%81%AB%E9%81%A9%E7%94%A8\" aria-label=\"3 レイヤーを関数に適用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. レイヤーを関数に適用</h4>\n<p>関数の下にある「Layers」を押し、下の「レイヤーの追加」ボタンから二つのレイヤを追加します\n<img width=\"1612\" alt=\"スクリーンショット 2020-08-07 18.36.45.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/502570/27d63d99-6a12-7370-3e32-46851977176f.png\"></p>\n<h4 id=\"注意\" style=\"position:relative;\"><a href=\"#%E6%B3%A8%E6%84%8F\" aria-label=\"注意 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>※注意※</h4>\n<ul>\n<li>Lambda関数のランタイムをPython3.8にするとChromedriverが動いてくれなかった(原因不明)ので、ランタイムはPython3.6か3.7に設定することをお勧めします。</li>\n<li>headless-chromiumとChromedriverの間に互換性がないと動作しないので<a href=\"http://chromedriver.chromium.org/downloads\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">こちら</a>から最新版を入手しても動作しない可能性があります。</li>\n</ul>\n<h3 id=\"lambda用にコードを少し変える\" style=\"position:relative;\"><a href=\"#lambda%E7%94%A8%E3%81%AB%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E5%B0%91%E3%81%97%E5%A4%89%E3%81%88%E3%82%8B\" aria-label=\"lambda用にコードを少し変える permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lambda用にコードを少し変える</h3>\n<p>筆者は今までCloud9以外のAWSツールを使ったことがないへっぽこコーダーなので、色んなサイトの見様見真似でなんとかLambdaで動くコードにしました。先人に感謝。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> random\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">lambda_handler</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    body_temp <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">36</span> <span class=\"token operator\">+</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    url <span class=\"token operator\">=</span> <span class=\"token string\">'https://docs.google.com/forms/d/e/1FAIpQLScGgZ8dsBkcSVutvW3JgDLqy3pIEKk12ucjiA8mNQrKopILog/viewform?usp=pp_url&amp;entry.1534939278=荒川智則&amp;entry.511939456='</span><span class=\"token operator\">+</span>body_temp\n    options <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>ChromeOptions<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    options<span class=\"token punctuation\">.</span>binary_location <span class=\"token operator\">=</span> <span class=\"token string\">'/opt/headless-chrome/headless-chromium'</span>\n    <span class=\"token comment\"># このオプション4つを付けないとChromeは起動せずエラーになります</span>\n    options<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--headless'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># サーバーレスでChromeを起動</span>\n    options<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--no-sandbox'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># sandbox外でChromeを起動</span>\n    options<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--single-process'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># タブ/サイトごとのマルチプロセスではなく、シングルプロセスへ切り替える</span>\n    options<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--disable-dev-shm-usage'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># メモリファイルの出力場所を変える</span>\n    driver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token string\">'/opt/headless-chrome/chromedriver'</span><span class=\"token punctuation\">,</span>options <span class=\"token operator\">=</span> options<span class=\"token punctuation\">)</span>\n    driver<span class=\"token punctuation\">.</span>implicitly_wait<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    driver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">click</span><span class=\"token punctuation\">(</span>xpath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        driver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span>xpath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">insert_pw</span><span class=\"token punctuation\">(</span>xpath<span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        driver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span>xpath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n    \n    moving_login_button <span class=\"token operator\">=</span> <span class=\"token string\">'/html/body/div[2]/div/div[2]/div[3]/div[2]'</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">.</span>find_elements_by_xpath<span class=\"token punctuation\">(</span>moving_login_button<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        click<span class=\"token punctuation\">(</span>moving_login_button<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 環境変数でMY_GMAILにGoogleアカウントのメアドを設定してください</span>\n        login_id <span class=\"token operator\">=</span> MY_GMAIL\n        login_id_xpath <span class=\"token operator\">=</span> <span class=\"token string\">'/html/body/div[1]/div[1]/div[2]/div/div[2]/div/div/div[2]/div/div[1]/div/form/span/section/div/div/div[1]/div/div[1]/div/div[1]/input'</span>\n        login_id_button <span class=\"token operator\">=</span> <span class=\"token string\">'/html/body/div[1]/div[1]/div[2]/div/div[2]/div/div/div[2]/div/div[2]/div/div[1]/div/div'</span>\n        insert_pw<span class=\"token punctuation\">(</span>login_id_xpath<span class=\"token punctuation\">,</span> login_id<span class=\"token punctuation\">)</span>\n        click<span class=\"token punctuation\">(</span>login_id_button<span class=\"token punctuation\">)</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 環境変数でMY_PASSWORDにGoogleアカウントのパスワードを設定してください</span>\n        login_pw <span class=\"token operator\">=</span> MY_PASSWORD\n        login_pw_xpath <span class=\"token operator\">=</span> <span class=\"token string\">'/html/body/div[1]/div[1]/div[2]/div/div[2]/div/div/div[2]/div/div[1]/div/form/span/section/div/div/div[1]/div[1]/div/div/div/div/div[1]/div/div[1]/input'</span>\n        login_pw_button <span class=\"token operator\">=</span> <span class=\"token string\">'/html/body/div[1]/div[1]/div[2]/div/div[2]/div/div/div[2]/div/div[2]/div/div[1]/div/div'</span>\n        insert_pw<span class=\"token punctuation\">(</span>login_pw_xpath<span class=\"token punctuation\">,</span> login_pw<span class=\"token punctuation\">)</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        click<span class=\"token punctuation\">(</span>login_pw_button<span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    submit_button <span class=\"token operator\">=</span> <span class=\"token string\">'//*[@id=\"mG61Hd\"]/div[2]/div/div[3]/div[1]/div/div'</span>\n    click<span class=\"token punctuation\">(</span>submit_button<span class=\"token punctuation\">)</span>\n    driver<span class=\"token punctuation\">.</span>close\n    driver<span class=\"token punctuation\">.</span>quit\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'statusCode'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'body'</span><span class=\"token punctuation\">:</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token string\">'Form submission success!!'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"注意点\" style=\"position:relative;\"><a href=\"#%E6%B3%A8%E6%84%8F%E7%82%B9\" aria-label=\"注意点 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>注意点</h4>\n<ul>\n<li>Chromeの起動オプション<code class=\"language-text\">--headless</code>,<code class=\"language-text\">--no-sandbox</code>,<code class=\"language-text\">single-process</code>,<code class=\"language-text\">--disable-dev-shm-usage</code>を付けないとLambda上で正常に起動せず、エラーが出ます。各オプションについての詳細は<a href=\"http://chrome.half-moon.org/43.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">こちら</a>をご覧ください</li>\n<li>レイヤーにアップロードしたファイルはoptディレクトリの配下に置かれます。パスを指定する際はopt/ディレクトリ名/…の形で表記しましょう</li>\n</ul>\n<h3 id=\"cloudwatch-eventsでトリガーを設定\" style=\"position:relative;\"><a href=\"#cloudwatch-events%E3%81%A7%E3%83%88%E3%83%AA%E3%82%AC%E3%83%BC%E3%82%92%E8%A8%AD%E5%AE%9A\" aria-label=\"cloudwatch eventsでトリガーを設定 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CloudWatch Eventsでトリガーを設定</h3>\n<ol>\n<li>関数の「Layers」をクリックして「トリガーを追加をクリック」し、ドロップダウンから「EventBridge (CloudWatch Events)」を選択します。</li>\n<li>ルールは「新規ルールの作成」で任意のルール名を入力。ルールタイプをスケジュール式にし、今回は毎日朝5時なので<code class=\"language-text\">corn(0 20 ? * * *)</code>と入力(LambdaはUTCでトリガーされるので9時間前をセットすることに留意)。トリガーを有効にして「追加」をクリックします。（cronの書き方は<a href=\"https://qiita.com/tossh/items/e135bd063a50087c3d6a\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">こちら</a>をご覧ください）</li>\n</ol>\n<img width=\"810\" alt=\"スクリーンショット 2020-08-07 18.56.44.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/502570/2c07b4d3-295d-7543-7de7-dc8b0efaf40b.png\">\n<h2 id=\"テスト\" style=\"position:relative;\"><a href=\"#%E3%83%86%E3%82%B9%E3%83%88\" aria-label=\"テスト permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>テスト</h2>\n<p>最後にしっかり動くかテストしましょう。Lambda関数画面の「テスト」をクリックします。\n<img width=\"1613\" alt=\"スクリーンショット 2020-08-07 18.51.28.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/502570/8418067e-0784-9b2c-feeb-624c132e277d.png\">\n大丈夫そうですね。</p>\n<h2 id=\"おわりに\" style=\"position:relative;\"><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\" aria-label=\"おわりに permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>おわりに</h2>\n<p>朝の検温はサボっていますが、寝る前にちゃんと測っているので安心してください。</p>\n<h2 id=\"参考文献\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\" aria-label=\"参考文献 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考文献</h2>\n<p><a href=\"https://masakimisawa.com/selenium_headless-chrome_python_on_lambda/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://masakimisawa.com/selenium_headless-chrome_python_on_lambda/</a>\n<a href=\"https://github.com/heroku/heroku-buildpack-google-chrome/issues/56\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/heroku/heroku-buildpack-google-chrome/issues/56</a>\n<a href=\"https://qiita.com/mishimay/items/afd7f247f101fbe25f30\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://qiita.com/mishimay/items/afd7f247f101fbe25f30</a></p>","fields":{"slug":"/posts/gfa/","tagSlugs":["/tag/python/","/tag/selenium/","/tag/scraping/","/tag/googleform/","/tag/aws/"]},"frontmatter":{"date":"2020-08-11","description":"SeleniumとLambdaを使った自動化の記事","tags":["python","selenium","scraping","googleform","aws"],"title":"毎朝5時にGoogle Formに自動回答したい","socialImage":{"publicURL":"/static/6905079239aa857c8ca73f4523becee4/ogp.webp"}}}},"pageContext":{"slug":"/posts/gfa/"}}