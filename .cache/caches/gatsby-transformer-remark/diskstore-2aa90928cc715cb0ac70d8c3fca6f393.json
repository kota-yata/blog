{"expireTime":9007200871417444000,"key":"transformer-remark-markdown-html-ast-bf7ef343b08883bbf8d41d88449eb237-gatsby-remark-relative-imagesgatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"最近、基本情報技術者試験の勉強をする中でパイプライン処理について少し調べたので備忘録的に書き残しておきます。Zennに書こうとも思いましたがあっちにはもっと有益な記事だけ残していきたいのでしょうもない備忘録はこっちに書きます。","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":114,"offset":114}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":114,"offset":114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"パイプライン処理ってなに？","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E3%83%91%E3%82%A4%E3%83%97%E3%83%A9%E3%82%A4%E3%83%B3%E5%87%A6%E7%90%86%E3%81%A3%E3%81%A6%E3%81%AA%E3%81%AB%EF%BC%9F","aria-label":"パイプライン処理ってなに？ permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"パイプライン処理ってなに？","position":{"start":{"line":4,"column":4,"offset":119},"end":{"line":4,"column":17,"offset":132}}}],"position":{"start":{"line":4,"column":1,"offset":116},"end":{"line":4,"column":17,"offset":132}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"パイプライン処理とは、CPUが複数の命令を実行段階をずらしながら同時並行的に実行することでスループットの向上を目指すという処理方式のことです。ここでいう実行段階とは、","position":{"start":{"line":5,"column":1,"offset":133},"end":{"line":5,"column":84,"offset":216}}}],"position":{"start":{"line":5,"column":1,"offset":133},"end":{"line":5,"column":84,"offset":216}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"実行プログラムをメモリからレジスタに読み込む","position":{"start":{"line":6,"column":4,"offset":220},"end":{"line":6,"column":26,"offset":242}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"命令フェッチ","position":{"start":{"line":6,"column":28,"offset":244},"end":{"line":6,"column":34,"offset":250}}}],"position":{"start":{"line":6,"column":26,"offset":242},"end":{"line":6,"column":36,"offset":252}}}],"position":{"start":{"line":6,"column":1,"offset":217},"end":{"line":6,"column":36,"offset":252}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"実行プログラムを解析して実行準備を行う","position":{"start":{"line":7,"column":4,"offset":256},"end":{"line":7,"column":23,"offset":275}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"命令デコード","position":{"start":{"line":7,"column":25,"offset":277},"end":{"line":7,"column":31,"offset":283}}}],"position":{"start":{"line":7,"column":23,"offset":275},"end":{"line":7,"column":33,"offset":285}}}],"position":{"start":{"line":7,"column":1,"offset":253},"end":{"line":7,"column":33,"offset":285}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"CPUの演算ユニットで実際に演算を行う","position":{"start":{"line":8,"column":4,"offset":289},"end":{"line":8,"column":23,"offset":308}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"実行","position":{"start":{"line":8,"column":25,"offset":310},"end":{"line":8,"column":27,"offset":312}}}],"position":{"start":{"line":8,"column":23,"offset":308},"end":{"line":8,"column":29,"offset":314}}}],"position":{"start":{"line":8,"column":1,"offset":286},"end":{"line":8,"column":29,"offset":314}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"演算結果をメモリに書き込む","position":{"start":{"line":9,"column":4,"offset":318},"end":{"line":9,"column":17,"offset":331}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"ライトバック","position":{"start":{"line":9,"column":19,"offset":333},"end":{"line":9,"column":25,"offset":339}}}],"position":{"start":{"line":9,"column":17,"offset":331},"end":{"line":9,"column":27,"offset":341}}}],"position":{"start":{"line":9,"column":1,"offset":315},"end":{"line":9,"column":27,"offset":341}}},{"type":"text","value":"\n"}],"position":{"start":{"line":6,"column":1,"offset":217},"end":{"line":9,"column":27,"offset":341}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"の4段階に分かれます。もっと細かく分ける場合もありますがとりあえずこの4ステップということにしておきます。\n従来の原始的なCPUの処理であれば、この4段階を順番に実行し、一つの命令が完了したら次の命令に移るという逐次処理を行うのですが、命令が複雑になるにつれそれではスループットが大幅に低下し処理性能が落ちてしまいます。そこで考案されたのがパイプライン処理です。パイプライン処理ではこの4段階を一つずつずらして並列処理を行うことで、従来の処理よりも高速に、複数の命令の実行を可能にしたのです。\n","position":{"start":{"line":11,"column":1,"offset":343},"end":{"line":13,"column":1,"offset":590}}},{"type":"element","tagName":"img","properties":{"src":"https://www.researchgate.net/profile/Jean_Christophe_Le_Lann/publication/269393735/figure/fig2/AS:392334681362441@1470551285619/Execution-configuration-of-three-stages-pipeline-processing-three-consecutive-bursts.png","alt":"pipeline-processing"},"children":[],"position":{"start":{"line":13,"column":1,"offset":590},"end":{"line":13,"column":241,"offset":830}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":241,"offset":830},"end":{"line":14,"column":1,"offset":831}}},{"type":"raw","value":"<span style=\"font-style:italic; font-size: 13px; color:#888888;\">","position":{"start":{"line":14,"column":1,"offset":831},"end":{"line":14,"column":66,"offset":896}}},{"type":"text","value":"Uploaded by Jean-Christophe Le Lann - researchgate.net","position":{"start":{"line":14,"column":66,"offset":896},"end":{"line":14,"column":120,"offset":950}}},{"type":"raw","value":"</span>","position":{"start":{"line":14,"column":120,"offset":950},"end":{"line":14,"column":127,"offset":957}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":127,"offset":957},"end":{"line":14,"column":131,"offset":961}}}],"position":{"start":{"line":11,"column":1,"offset":343},"end":{"line":14,"column":131,"offset":961}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"スーパー・パイプライン","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E3%82%B9%E3%83%BC%E3%83%91%E3%83%BC%E3%83%BB%E3%83%91%E3%82%A4%E3%83%97%E3%83%A9%E3%82%A4%E3%83%B3","aria-label":"スーパー・パイプライン permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"スーパー・パイプライン","position":{"start":{"line":16,"column":5,"offset":967},"end":{"line":16,"column":16,"offset":978}}}],"position":{"start":{"line":16,"column":1,"offset":963},"end":{"line":16,"column":16,"offset":978}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"上記のパイプライン処理より高速なスループットを実現するのがスーパー・パイプラインという処理方式です。スーパー・パイプラインでは、上記のパイプライン処理で4分割したステップのそれぞれをさらに2分割することで各ステップの処理をさらに単純化し、通常のパイプライン処理よりももっと高速な並列処理を実現しようという方式です。","position":{"start":{"line":17,"column":1,"offset":979},"end":{"line":17,"column":158,"offset":1136}}}],"position":{"start":{"line":17,"column":1,"offset":979},"end":{"line":17,"column":158,"offset":1136}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"スーパースカラー","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E3%82%B9%E3%83%BC%E3%83%91%E3%83%BC%E3%82%B9%E3%82%AB%E3%83%A9%E3%83%BC","aria-label":"スーパースカラー permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"スーパースカラー","position":{"start":{"line":19,"column":5,"offset":1142},"end":{"line":19,"column":13,"offset":1150}}}],"position":{"start":{"line":19,"column":1,"offset":1138},"end":{"line":19,"column":13,"offset":1150}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"スーパー・パイプラインと並んで通常のパイプライン処理を強化するもう一つの方法がスーパースカラーです。スーパースカラーはパイプライン処理を行うCPU等のプロセッサを複数動作させることで、ハードウェアレベルでスペックを上げてスループットを上げるという処理方式です。言うたら人海戦術です。ただスーパースカラーの場合、片方の演算結果をもう片方の演算に利用する場合等必ずしも同時にデコードされた複数の命令を並列に実行できないこともあるため、単純にプロセッサーが2倍になったからといって処理性能が2倍になるわけではありません。\n","position":{"start":{"line":20,"column":1,"offset":1151},"end":{"line":21,"column":1,"offset":1409}}},{"type":"element","tagName":"img","properties":{"src":"https://www.ap-siken.com/kakomon/27_haru/img/09.gif","alt":"extra-pipeline"},"children":[],"position":{"start":{"line":21,"column":1,"offset":1409},"end":{"line":21,"column":71,"offset":1479}}},{"type":"text","value":"\n","position":{"start":{"line":21,"column":71,"offset":1479},"end":{"line":22,"column":1,"offset":1480}}},{"type":"raw","value":"<span style=\"font-style:italic; font-size: 13px; color:#888888;\">","position":{"start":{"line":22,"column":1,"offset":1480},"end":{"line":22,"column":66,"offset":1545}}},{"type":"element","tagName":"a","properties":{"href":"http://semirara.sota1235.net/general/%E3%82%B9%E3%83%BC%E3%83%91%E3%83%BC%E3%82%B9%E3%82%AB%E3%83%A9","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"http://semirara.sota1235.net/general/スーパースカラ","position":{"start":{"line":22,"column":66,"offset":1545},"end":{"line":22,"column":110,"offset":1589}}}],"position":{"start":{"line":22,"column":66,"offset":1545},"end":{"line":22,"column":110,"offset":1589}}},{"type":"raw","value":"</span>","position":{"start":{"line":22,"column":110,"offset":1589},"end":{"line":22,"column":117,"offset":1596}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":117,"offset":1596},"end":{"line":22,"column":121,"offset":1600}}}],"position":{"start":{"line":20,"column":1,"offset":1151},"end":{"line":22,"column":121,"offset":1600}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"パイプライン・ハザード","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E3%83%91%E3%82%A4%E3%83%97%E3%83%A9%E3%82%A4%E3%83%B3%E3%83%BB%E3%83%8F%E3%82%B6%E3%83%BC%E3%83%89","aria-label":"パイプライン・ハザード permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"パイプライン・ハザード","position":{"start":{"line":24,"column":4,"offset":1605},"end":{"line":24,"column":15,"offset":1616}}}],"position":{"start":{"line":24,"column":1,"offset":1602},"end":{"line":24,"column":15,"offset":1616}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"このパイプライン処理によってCPUの処理性能は大幅に上がったわけですが、従来のCPUでは起こり得なかった","position":{"start":{"line":25,"column":1,"offset":1617},"end":{"line":25,"column":53,"offset":1669}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"パイプライン・ハザード","position":{"start":{"line":25,"column":55,"offset":1671},"end":{"line":25,"column":66,"offset":1682}}}],"position":{"start":{"line":25,"column":53,"offset":1669},"end":{"line":25,"column":68,"offset":1684}}},{"type":"text","value":"という問題が浮かび上がりました。\nパイプライン・ハザードとは、主に依存関係のある命令同士で発生する、ある命令がライトバックを行わないうちに後続の命令がそのレジスタを読み込みに行ってしまう場合などのエラーです。これが起きると、理想的なパイプライン処理の場合1になるはずのCPI(Cycles Per Instruction)が大きくなる、つまりスループットが大幅に低下することになります。","position":{"start":{"line":25,"column":68,"offset":1684},"end":{"line":26,"column":177,"offset":1877}}}],"position":{"start":{"line":25,"column":1,"offset":1617},"end":{"line":26,"column":177,"offset":1877}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"このパイプライン・ハザードを防ぐために分岐予測やNop代入などさまざまな方法があるのですが、それについてはまた後ほど書きたいと思います","position":{"start":{"line":28,"column":1,"offset":1879},"end":{"line":28,"column":68,"offset":1946}}}],"position":{"start":{"line":28,"column":1,"offset":1879},"end":{"line":28,"column":68,"offset":1946}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":29,"column":1,"offset":1947}}}}