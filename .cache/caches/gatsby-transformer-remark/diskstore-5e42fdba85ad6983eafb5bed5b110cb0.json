{"expireTime":9007200871417445000,"key":"transformer-remark-markdown-ast-2e632dff917ffb6a9950ff923b1724c2-gatsby-remark-relative-imagesgatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"最近ふと、「あれ？俺TCP通信理解してなくね？」と思ったので軽くTCPの働きをまとめておきます","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":48,"offset":48},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":48,"offset":48},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#ソケットを作る","title":null,"children":[],"data":{"hProperties":{"aria-label":"ソケットを作る permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"ソケットを作る","position":{"start":{"line":4,"column":4,"offset":53},"end":{"line":4,"column":11,"offset":60},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":50},"end":{"line":4,"column":11,"offset":60},"indent":[]},"data":{"id":"ソケットを作る","htmlAttributes":{"id":"ソケットを作る"},"hProperties":{"id":"ソケットを作る","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"アプリケーションでSocketライブラリが呼び出されたタイミングでソケット一つ分のメモリ領域を確保し、制御情報の初期値を記録する。この時点でソケットが一つできたことになるので、このソケットのディスクリプタをアプリケーションに返す。今後アプリケーションがプロトコルスタックにデータ送受信動作を依頼する際にディスクリプタを渡すことで、いちいちアプリケーションが情報を渡す手間を省くことができる。アプリケーションはこのディスクリプタと名前解決で得たサーバーのIPアドレス、IPアドレス内での接続先を示すポート番号を引数にconnect()メソッドを呼び出し、接続フェーズに入る。","position":{"start":{"line":5,"column":1,"offset":61},"end":{"line":5,"column":287,"offset":347},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":61},"end":{"line":5,"column":287,"offset":347},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#サーバーと接続する","title":null,"children":[],"data":{"hProperties":{"aria-label":"サーバーと接続する permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"サーバーと接続する","position":{"start":{"line":7,"column":4,"offset":352},"end":{"line":7,"column":13,"offset":361},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":349},"end":{"line":7,"column":13,"offset":361},"indent":[]},"data":{"id":"サーバーと接続する","htmlAttributes":{"id":"サーバーと接続する"},"hProperties":{"id":"サーバーと接続する","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"宛先情報を引数として受け取ったTCPはTCPヘッダーのSYNビットを1にし、ウィンドウサイズやシーケンス番号を記載してサーバーに送信する。サーバー側のTCPは宛先のソケットに接続したらSYN・ACKビットを1にして、サーバー側のウィンドウサイズと乱数で算出したシーケンス番号を記載したTCPヘッダーをつけてクライアントに送り返す。それを受け取ったクライアントのTCPはソケットに制御情報を追加し、再びACKビットを1にしてサーバーに受信確認を送る。この接続動作ではクライアントとサーバー合わせて3回のやりとりで接続が完了するため「3ウェイ・ハンドシェイク」と呼ばれている。","position":{"start":{"line":8,"column":1,"offset":362},"end":{"line":8,"column":287,"offset":648},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":362},"end":{"line":8,"column":287,"offset":648},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#データを送受信する","title":null,"children":[],"data":{"hProperties":{"aria-label":"データを送受信する permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"データを送受信する","position":{"start":{"line":10,"column":4,"offset":653},"end":{"line":10,"column":13,"offset":662},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":650},"end":{"line":10,"column":13,"offset":662},"indent":[]},"data":{"id":"データを送受信する","htmlAttributes":{"id":"データを送受信する"},"hProperties":{"id":"データを送受信する","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"接続が完了したらいよいよデータの送受信に入るが、TCPはMSSに近づくまで送信ようバッファメモリにデータをため、ある程度まで貯まった段階で送信動作に入る。ただ、中々MSSに近づかない場合は送信動作の遅延を招くので、一定時間が経過したら強制的に送信動作が実行される仕様になっているプロトコルスタックがほとんどである。クライアントのTCPはデータを送信する際にシーケンス番号をTCPヘッダーに記載し、サーバーのTCPは受け取ったデータのTCPヘッダーを確認してシーケンス番号＋データのバイト数であるACK番号をクライアントに返す。こうすることでクライアントはサーバーが正常にデータを受け取ったかを確認することができる。","position":{"start":{"line":11,"column":1,"offset":663},"end":{"line":11,"column":308,"offset":970},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":663},"end":{"line":11,"column":308,"offset":970},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"この時、サーバーからACK番号が帰ってくるのをいちいちクライアントが待っていたら通信速度はえげつなく遅くなってしまう。そのため、実際の通信では、接続フェーズで受信側のウィンドウサイズ、つまり受信バッファの空き容量を相手に伝えて置くことでウィンドウサイズに到達するまではACK番号を待つことなくデータを送信できる仕組みになっている。受信側は受信処理が完了して新たにバッファの空き容量が変化したらTCPヘッダーのウィンドウフィールドでウィンドウサイズを通知する。","position":{"start":{"line":13,"column":1,"offset":972},"end":{"line":13,"column":230,"offset":1201},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":972},"end":{"line":13,"column":230,"offset":1201},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#サーバーから切断する","title":null,"children":[],"data":{"hProperties":{"aria-label":"サーバーから切断する permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"サーバーから切断する","position":{"start":{"line":15,"column":4,"offset":1206},"end":{"line":15,"column":14,"offset":1216},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":1203},"end":{"line":15,"column":14,"offset":1216},"indent":[]},"data":{"id":"サーバーから切断する","htmlAttributes":{"id":"サーバーから切断する"},"hProperties":{"id":"サーバーから切断する","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"ブラウザの場合はサーバーが最後のレスポンスデータを返してデータ送受信が終了するのでサーバー側から切断動作に入るが、クライアントから切断するアプリケーションも存在する。","position":{"start":{"line":16,"column":1,"offset":1217},"end":{"line":16,"column":84,"offset":1300},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1217},"end":{"line":16,"column":84,"offset":1300},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"サーバーは最後のレスポンスメッセージを送信したら、TCPヘッダーのFINビットを１にしたデータをクライアントに送信し、ソケットに切断動作に入ったという情報を記載する。FINビットが1のデータを受け取ったクライアントは同様にソケットに切断動作に入ったという情報を記載し、サーバーにACK番号を返す。その後アプリケーションにデータ受信が終了したという情報を伝え、今度はクライアントからFINビットを1にしたデータをサーバーに送信する。それを受け取ったサーバーはACK番号をクライアントに返し、切断が完了する。","position":{"start":{"line":18,"column":1,"offset":1302},"end":{"line":18,"column":253,"offset":1554},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":1302},"end":{"line":18,"column":253,"offset":1554},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":20,"column":1,"offset":1556},"end":{"line":20,"column":4,"offset":1559},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"あくまでこの記事はまとめなので実際にデータ送受信の際はもっと他の動作も行われていますが、接続から切断までクライアントとサーバーのTCPさんが行っている仕事を大まかに説明するとこんな感じになります。","position":{"start":{"line":22,"column":1,"offset":1561},"end":{"line":22,"column":99,"offset":1659},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1561},"end":{"line":22,"column":99,"offset":1659},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":23,"column":1,"offset":1660}}}}