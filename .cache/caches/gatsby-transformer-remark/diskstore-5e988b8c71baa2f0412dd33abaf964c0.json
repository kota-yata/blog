{"expireTime":9007200865296237000,"key":"transformer-remark-markdown-html-be8eefd6cf9e31c67d219aaa5a4a8d13-gatsby-remark-relative-imagesgatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":"<p>ある日ネットサーフィンをしていたら<a href=\"https://danielmiessler.com/study/encoding-encryption-hashing-obfuscation/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Encoding vs. Encryption vs. Hashing vs. Obfuscation</a>という記事を見つけました。この四つの単語はそれぞれ実際には全く違う意味なんだけど「違いを説明せよ」と突然言われたら確かに説明できないなぁ、と思ったので元記事の内容に沿って各単語の意味を整理しておきます。</p>\n<h2 id=\"各単語の概要\" style=\"position:relative;\"><a href=\"#%E5%90%84%E5%8D%98%E8%AA%9E%E3%81%AE%E6%A6%82%E8%A6%81\" aria-label=\"各単語の概要 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>各単語の概要</h2>\n<h4 id=\"encoding\" style=\"position:relative;\"><a href=\"#encoding\" aria-label=\"encoding permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Encoding</h4>\n<p>データをある一定の規則に基づいて可逆な別のデータに変換すること。和訳は<strong>符号化</strong>。</p>\n<h4 id=\"encryption\" style=\"position:relative;\"><a href=\"#encryption\" aria-label=\"encryption permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Encryption</h4>\n<p>データをアルゴリズムを使って特定の「鍵」によって復号可能な別のデータに変換すること。和訳は<strong>暗号化</strong>。</p>\n<h4 id=\"hashing\" style=\"position:relative;\"><a href=\"#hashing\" aria-label=\"hashing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hashing</h4>\n<p>データをアルゴリズムを使って非可逆な別のデータに変換すること。和訳は<strong>ハッシング</strong>。</p>\n<h4 id=\"obfuscation\" style=\"position:relative;\"><a href=\"#obfuscation\" aria-label=\"obfuscation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Obfuscation</h4>\n<p>データの意味は変えないまま人間にとって読みにくい別のデータに変換すること。和訳は<strong>難読化</strong>。</p>\n<h2 id=\"encoding-1\" style=\"position:relative;\"><a href=\"#encoding-1\" aria-label=\"encoding 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Encoding</h2>\n<ul>\n<li>和訳 : 符号化</li>\n<li>可逆</li>\n</ul>\n<p>符号化は比較的幅広い分野で当てはまる概念である。脳科学においても符号化（<a href=\"https://bsd.neuroinf.jp/wiki/%E7%AC%A6%E5%8F%B7%E5%8C%96\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">記銘</a>）という概念があり、言語の翻訳もある意味では符号化である。またカメラの画像処理やアナログ音声のA/D変換においても符号化の概念が利用されている。挙げていくとキリがなくてただでさえ短い夏休みが無駄になってしまうので全て調べ上げることはできないが、要するに、<strong>「あるデータを誰かにとって理解しやすいデータに規則正しく変換する」</strong>というのが符号化の意味である。この概念を応用した例としてはデータの圧縮なども挙げられる。</p>\n<p>情報科学であればコンピュータ、脳科学であれば脳、言語学であればその国の人にとって理解しやすいデータの形を作ってあげるのが、符号化の仕事であり、概念である。この記事を見ているであろう技術者の方に馴染みのある例をあげればUnicodeやBase64、ASCIIなどが符号化データに当たる。</p>\n<p>上記で述べた概念を用いれば、DNSサーバーでURLをIPアドレスに変換する処理も、通信プロトコルが理解しやすいデータに変換するという意味では符号化に当てはまる。実際の通信では2進数でやりとりされるIPアドレスを人間様の読みやすいように10進数に変換する処理もまた、符号化である。</p>\n<h2 id=\"encryption-1\" style=\"position:relative;\"><a href=\"#encryption-1\" aria-label=\"encryption 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Encryption</h2>\n<ul>\n<li>和訳 : 暗号化</li>\n<li>可逆</li>\n</ul>\n<p>暗号化は主に情報通信において使われることが多い。暗号の起源として知られるものとして <a href=\"https://www.y-history.net/appendix/wh0101-048.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ヒエログリフ</a>(象形文字)が挙げられるが、ヒエログリフそのものに秘匿性の意図はなく、単に後世で解読にえげつなく時間がかかったというだけなので厳密には暗号ではないとされている。古代から近代にかけては主に軍事的な目的で暗号が発明されることが多く、有名な<a href=\"https://persol-tech-s.co.jp/corporate/security/article.html?id=80\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">シーザー暗号</a>やドイツ軍の<a href=\"http://www1.accsnet.ne.jp/~hoshos231/howtobreakENIGMA.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">エニグマ</a>の暗号方式などもその一つである。古代の暗号から共通する目的として、<strong>データを秘密に保つこと</strong>が挙げられる。これに関しては直感的に分かりやすいので詳しく説明する必要はないが、カッコよく言えば「秘匿性」である。</p>\n<p>現代の情報通信における暗号化では、一つの通信で使われる暗号アルゴリズムなどを、<a href=\"https://developer.mozilla.org/ja/docs/Glossary/Cipher_suite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">暗号スイート</a>という文字列で表す。例えば、</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ECDHE-RSA-AES128-GCM-SHA256</code></pre></div>\n<p>という暗号スイートがあった場合、鍵交換には<a href=\"https://ja.wikipedia.org/wiki/%E6%A5%95%E5%86%86%E6%9B%B2%E7%B7%9A%E3%83%87%E3%82%A3%E3%83%95%E3%82%A3%E3%83%BC%E3%83%BB%E3%83%98%E3%83%AB%E3%83%9E%E3%83%B3%E9%8D%B5%E5%85%B1%E6%9C%89\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ECDHE</a>、鍵認証には<a href=\"http://e-words.jp/w/RSA.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">RSA</a>、暗号化アルゴリズムには<a href=\"https://www.weblio.jp/content/AES-128\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AES128</a>、暗号モードは<a href=\"https://ja.wikipedia.org/wiki/Galois/Counter_Mode\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GCM</a>、ハッシュ関数には<a href=\"https://gaiax-blockchain.com/sha-256\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SHA-256</a>が使われているということを示す。</p>\n<p>＊鍵認証と暗号化アルゴリズムの間に「<em>WITH</em>」が入る場合もある</p>\n<h2 id=\"hashing-1\" style=\"position:relative;\"><a href=\"#hashing-1\" aria-label=\"hashing 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hashing</h2>\n<ul>\n<li>和訳 : ハッシング</li>\n<li>非可逆</li>\n</ul>\n<p>ハッシングは主に情報通信で使われ、アルゴリズムに基づいて<strong>あるデータを一見乱数に見える解読不可能で非可逆な別のデータに変換すること</strong>をいう。暗号化と違って秘匿性の目的はなく、主に検索の高速化や改竄検知に使われる。</p>\n<p>例えば、ハッシュ探索アルゴリズムは一般的な線形探索アルゴリズムに比べて高速な処理が期待でき、ハッシュを利用した<a href=\"https://qiita.com/xiao_ming/items/2c4f3ef469f2948998ba\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Landmark-based fingerprinting</a>はShazamの音声類似性検索のアルゴリズムにも採用されている。改竄検知でいえば、最も有名なのがSHA-1, SHA-2ハッシュ関数である。改竄検知の方法としてはデータをハッシュ化して暗号化したデータと共に送信し、受信側がデータを復号してハッシュ化した際に元のハッシュ値と違った場合に改竄が検出されるというものである。SHA-1に関しては2005年から脆弱性が指摘され、2017年に<a href=\"https://japan.zdnet.com/article/35097102/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Googleが実際に攻撃に成功した</a>ことが決定的となって利用は大幅に減少した。2020年7月に<a href=\"https://twitter.com/IPAjp/status/1280336337732644864\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">IPAから公開された</a>CRYPTRECの利用禁止暗号アルゴリズムにもノミネートされている。</p>\n<h2 id=\"obfascation\" style=\"position:relative;\"><a href=\"#obfascation\" aria-label=\"obfascation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Obfascation</h2>\n<ul>\n<li>和訳 : 難読化</li>\n<li>可逆</li>\n</ul>\n<p>難読化とは、主にソースコードの解析防止や知的財産権の保護を目的として敢えて読みにくいコードに変換することである。概念を説明すれば<strong>「誰かにとって扱いにくいデータに変換する」</strong>、つまり概念的には符号化の対極に位置するものとも言える。難読化がソースコードの文脈以外で使われている例はぶっちゃけ思いつかないし、ググっても出てこないので「難読化=ソースコードの難読化」と考えて良いだろう。</p>\n<p>ソースコードを難読化する理由としては、上述のように、実装している独自アルゴリズムのパクリや機能制限の回避を目的とした<a href=\"https://www.atmarkit.co.jp/ait/articles/0401/01/news051.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">リバースエンジニアリング</a>を防ぐ目的がほとんどである。実際<a href=\"https://obfuscator.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">JavaScript</a>や<a href=\"http://pyarmor.dashingsoft.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Python</a>など、主要なスクリプト言語ほぼ全てに難読化パッケージ/ツールがあるが、手作業でやるのは単純に初心者がコードを書くのと一緒になってしまうので完全に時間の無駄である。</p>\n<p>＊筆者の場合は自分が書くコードは無意識に難読化されているので難読化ツールは特に必要ない。</p>\n<p>ここからは筆者の個人的な意見だが、個人プロジェクト以外のコードはほぼ確実に他人と共有する必要があり、その時に難読化されたコードをレビューしろとか改変しろとか言われたらたまったもんじゃない。なので本当に隠したい処理はサーバーサイドで書き、どうしてもクライアントサイドで書かなければならない場合は開発が終了して保守のフェーズに入る際に難読化することをお勧めする。</p>\n<hr>\n<p>といった感じでできるだけ各単語の概念を踏まえて整理したので、参考にしていただけるとありがたいです。</p>\n<hr>\n<h3 id=\"参考文献\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\" aria-label=\"参考文献 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考文献</h3>\n<p><a href=\"https://www.netagent.co.jp/study/blog/hard/20180726.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.netagent.co.jp/study/blog/hard/20180726.html</a></p>\n<p><a href=\"https://danielmiessler.com/study/encoding-encryption-hashing-obfuscation/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://danielmiessler.com/study/encoding-encryption-hashing-obfuscation/</a></p>\n<p><a href=\"https://www.geeksforgeeks.org/encryption-encoding-hashing/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.geeksforgeeks.org/encryption-encoding-hashing/</a></p>\n<p><a href=\"https://www.packetlabs.net/encryption-encoding-and-hashing/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.packetlabs.net/encryption-encoding-and-hashing/</a></p>"}